[tool.poetry]
name = "Pipidastr"
version = "0.0.1"
description = ""
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
aiogram = "^3.10.0"
loguru = "^0.7.2"
typed-argument-parser = "^1.10.1"
pydantic = "^2.8.2"
python-dotenv = "^1.0.1"
pydantic-settings = "^2.3.4"
ujson = "^5.10.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.1"
mypy = "^1.10.1"
pyright = "^1.1.371"
black = "^24.4.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[project]
name = "Pipidastr"
description = ""
version = "0.0.1"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "You name", email = "you@example.com" }]


[project.license]
file = "LICENSE"


[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".env",
    "__pypackages__",
    "__pycache__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "env",
]

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
pydocstyle.convention = "google"
mccabe.max-complexity = 10
select = ["ALL"]
ignore = [
    "D",
    "ANN002",
    "ANN003",
    "ANN101",
    "ANN102",
    "ANN401",
    "D100",
    "D203",
    "D213",
    "B006",
    "B009",
    "B010",
    "FBT001",
    "FBT002",
    "PYI001",
    "PYI024",
    "PGH003",
    "PGH004",
    "TD002",
    "TD002",
    "S101",
    "S311",
    "T201",
    "T203",
    "INP001",
    "PIE796",
    "RET504",
    "PTH123",
    "UP007",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]


[tool.mypy]
python_version = "3.12"
plugins = "numpy.typing.mypy_plugin"
check_untyped_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true


[[tool.mypy.overrides]]
module = ['tests.*']
disallow_untyped_defs = false
strict_equality = false


[tool.pyright]
include = ["src"]
exclude = []
venv = ".venv"


[tool.black]
line-length = 120
target-version = ["py312"]
include = '\.pyi?$'
